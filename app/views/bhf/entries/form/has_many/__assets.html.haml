- if f.object.assets.any?
  = node f, field do
    - f.object.assets.each do |asset|
      = f.fields_for field.name, asset do |a|
        - if asset.file.file?
          - if asset.is_image?
            = image_tag asset.file.url(:medium), class: :uploaded_image
          - else
            = link_to asset.file_file_name, asset.file.url, class: :uploaded_file

          .file_delete
            = a.check_box :_destroy
            = a.label :_destroy, t('bhf.helpers.file.delete')
          %hr

= node f, field do
  .array_holder
    = f.fields_for field.name, Asset.new do |a|
      = a.file_field :file


-#
  new Sortables(sortableElems, {
  	handle: '.handle',
  	onStart: function(element, clone){
  		element.addClass('dragged');
  	},
  	onComplete: function(element){
  		element.removeClass('dragged');
  		new Request({
  			method: 'put',
  			url: this.element.getParent('tbody').get('data-sort-url')
  		}).send({data: {order: this.serialize()}});
  	}
  });
